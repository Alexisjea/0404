/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package com.cda.contenu_seance.model;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;
import java.util.List;


@Entity
@Getter
@Setter
@NoArgsConstructor

public class Formation  {
@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String typeFormation;
//    @ManyToMany
//    private List<Activiter> referencielActiviter;

    @OneToMany(mappedBy = "formation")
    private List <Session> sessions;
    @OneToMany(mappedBy = "formation")

    private List<Reac> reacs;


    public Formation(String typeFormation , Session sessions) {
        this.typeFormation = typeFormation;

    }

}